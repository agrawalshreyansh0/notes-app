# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  server:
    user: appuser
    depends_on:
      db:
        condition: service_healthy
    build:
      dockerfile: Dockerfile
      context: .
    command: sh -c "python3 manage.py makemigrations && python3 manage.py migrate --noinput && python3 manage.py runserver 0.0.0.0:8000"
    develop:
      watch:
        - path: ./requirements.txt
          action: rebuild
        - path: .
          target: /app
          action: sync
    ports:
      - 8000:8000
    expose:
      - 8000
    environment:
      - DEBUG=True
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=django_db
      - DB_USER=django_user
      - DB_PASSWORD=django_pass

  db:
    image: postgres
    restart: always
    user: postgres
    # secrets:
    #   - db-password
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: django_db
      POSTGRES_USER: django_user
      POSTGRES_PASSWORD: django_pass
    expose:
      - 5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"


volumes:
  db-data:
# secrets:
#   db-password:
#     file: db/password.txt

